{"version":3,"sources":["Components/Search.js","Components/Header.js","Components/Footer.js","Components/ListItem.js","Components/ListItems.js","Components/PageNav.js","images/spinner.gif","App.js","index.js"],"names":["Search","searchFact","className","type","placeholder","onChange","e","target","value","Header","Footer","ListItem","idx","fact","changeFact","useState","editToggle","setEditToggle","textRef","useRef","onClick","class","_id","current","id","cols","rows","ref","disabled","text","ListItems","facts","pageCount","map","index","PageNav","maxPageCount","changePage","App","serverFacts","setServerFacts","setFacts","setPageCount","loading","setLoading","useEffect","getFacts","a","fetchFacts","allFacts","fetch","res","json","data","console","log","initFacts","slice","searchKey","lowerKey","toLowerCase","searchedFacts","filter","includes","src","Spinner","length","del","newFacts","Math","ceil","direction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.251384fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Search.css';\r\n\r\nconst Search = ({ searchFact }) => {\r\n  const searchFactHandler = (e) => {\r\n    searchFact(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='search-widget'>\r\n      <h4>Give a look at below dog facts</h4>\r\n      <input\r\n        type='text'\r\n        className='seacrh-input'\r\n        placeholder='Search facts globally...'\r\n        onChange={searchFactHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nimport Search from './Search';\r\n\r\nconst Header = ({ searchFact }) => {\r\n  return (\r\n    <header>\r\n      <div className='header'>\r\n        <h1>React Pagination Demo</h1>\r\n      </div>\r\n      <Search searchFact={searchFact} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer'>\r\n      <p>\r\n        Pagination can also be implemented at server side. So at frontend we can\r\n        directly fetch Facts based on pageCount.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useRef } from 'react';\r\n\r\nimport './ListItem.css';\r\n\r\nfunction ListItem({ idx, fact, changeFact }) {\r\n  const [editToggle, setEditToggle] = useState(true);\r\n  const textRef = useRef(null);\r\n\r\n  const editToggleHandler = () => {\r\n    setEditToggle(!editToggle);\r\n  };\r\n\r\n  const saveFactHandler = () => {\r\n    // console.log(textRef.current.value);\r\n    setEditToggle(!editToggle);\r\n    changeFact(fact._id, textRef.current.value);\r\n  };\r\n\r\n  const deleteFactsHandler = () => {\r\n    changeFact(fact._id, '', true);\r\n  };\r\n\r\n  return (\r\n    <div className='item'>\r\n      <div className='item-top'>\r\n        <label className='text-label'>Fact: {idx + 1}</label>\r\n        <div className='text-actions'>\r\n          {editToggle ? (\r\n            <button className='btn edit' onClick={editToggleHandler}>\r\n              <i class='fas fa-edit'></i>\r\n            </button>\r\n          ) : (\r\n            <button className='btn save' onClick={saveFactHandler}>\r\n              <i class='fas fa-save'></i>\r\n            </button>\r\n          )}\r\n          <button className='btn delete' onClick={deleteFactsHandler}>\r\n            <i class='fas fa-trash-alt'></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        id='1'\r\n        cols='30'\r\n        rows='2'\r\n        className='text-area'\r\n        ref={textRef}\r\n        disabled={editToggle ? 1 : 0}\r\n      >\r\n        {fact.text}\r\n      </textarea>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport Search from './Search';\r\n\r\nfunction ListItems({ facts, pageCount, changeFact }) {\r\n  return (\r\n    <>\r\n      {facts.map((fact, index) => {\r\n        return (\r\n          <ListItem\r\n            key={fact._id}\r\n            idx={pageCount !== 1 ? (pageCount - 1) * 10 + index : index}\r\n            fact={fact}\r\n            changeFact={changeFact}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListItems;\r\n","import React from 'react';\r\n\r\nimport './PageNav.css';\r\n\r\nconst PageNav = ({ pageCount, maxPageCount, changePage }) => {\r\n  const prevPageHandler = () => {\r\n    changePage('prev');\r\n  };\r\n\r\n  const nextPageHandler = () => {\r\n    changePage('next');\r\n  };\r\n\r\n  return (\r\n    <div className='page-nav'>\r\n      <button\r\n        className='prev'\r\n        onClick={prevPageHandler}\r\n        disabled={pageCount === 1 ? true : false}\r\n      >\r\n        prev\r\n      </button>\r\n      <p>{pageCount}</p>\r\n      <button\r\n        className='next'\r\n        onClick={nextPageHandler}\r\n        disabled={pageCount === maxPageCount ? true : false}\r\n      >\r\n        next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNav;\r\n","export default __webpack_public_path__ + \"static/media/spinner.0c238a17.gif\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from '../src/Components/Header';\r\nimport './App.css';\r\nimport Footer from './Components/Footer';\r\nimport ListItems from './Components/ListItems';\r\nimport PageNav from './Components/PageNav';\r\n\r\nimport Spinner from '../src/images/spinner.gif';\r\n\r\nfunction App() {\r\n  const [serverFacts, setServerFacts] = useState([]);\r\n  const [facts, setFacts] = useState([]);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // On Load\r\n    const getFacts = async () => {\r\n      const allFacts = await fetchFacts();\r\n      setServerFacts(allFacts);\r\n      setLoading(false);\r\n    };\r\n\r\n    getFacts();\r\n  }, []);\r\n\r\n  // Fetch Facts From Server\r\n  const fetchFacts = async () => {\r\n    const res = await fetch(\r\n      'https://cat-fact.herokuapp.com/facts/random?animal_type=dog&amount=55'\r\n    );\r\n    const data = await res.json();\r\n\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log((pageCount - 1) * 10, pageCount * 10);\r\n    // const initFacts = DUMMY_FACTS.slice((pageCount - 1) * 10, pageCount * 10);\r\n    const initFacts = serverFacts.slice((pageCount - 1) * 10, pageCount * 10);\r\n    setFacts(() => initFacts);\r\n  }, [serverFacts, pageCount]);\r\n\r\n  // Global Search\r\n  const searchHandler = (searchKey) => {\r\n    if (searchKey === '') {\r\n      const initFacts = serverFacts.slice((pageCount - 1) * 10, pageCount * 10);\r\n      setFacts(() => initFacts);\r\n    } else {\r\n      const lowerKey = searchKey.toLowerCase();\r\n      const searchedFacts = serverFacts.filter((fact) => {\r\n        if (fact.text.toLowerCase().includes(lowerKey)) {\r\n          return fact;\r\n        }\r\n      });\r\n\r\n      setFacts(searchedFacts);\r\n    }\r\n  };\r\n\r\n  const changePageCountHandler = (direction) => {\r\n    if (direction === 'prev' && pageCount > 1) {\r\n      setPageCount(pageCount - 1);\r\n    } else if (direction === 'next' && pageCount < serverFacts.length / 10) {\r\n      setPageCount(pageCount + 1);\r\n    }\r\n  };\r\n\r\n  const changeFactsHandler = (id, text = '', del = false) => {\r\n    let newFacts = [];\r\n\r\n    if (!del) {\r\n      // Edit fact from serverFacts\r\n      newFacts = serverFacts.map((fact) => {\r\n        if (fact._id === id) {\r\n          return {\r\n            ...fact,\r\n            text: text,\r\n          };\r\n        }\r\n        return fact;\r\n      });\r\n\r\n      setServerFacts(newFacts);\r\n    } else {\r\n      // Delete fact from serverFacts\r\n      newFacts = serverFacts.filter((fact) => {\r\n        if (fact._id !== id) {\r\n          return fact;\r\n        }\r\n      });\r\n      setServerFacts(newFacts);\r\n    }\r\n    // console.log(newFacts);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header searchFact={searchHandler} />\r\n      {loading && <img src={Spinner} />}\r\n      <main>\r\n        {facts.length > 0 && (\r\n          <ListItems\r\n            facts={facts}\r\n            pageCount={pageCount}\r\n            changeFact={changeFactsHandler}\r\n          />\r\n        )}\r\n\r\n        <PageNav\r\n          pageCount={pageCount}\r\n          maxPageCount={Math.ceil(serverFacts.length / 10)}\r\n          changePage={changePageCountHandler}\r\n        />\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}